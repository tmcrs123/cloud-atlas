// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cloud_atlas;

#nullable disable

namespace cloud_atlas.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20250718081235_remove marker photo link")]
    partial class removemarkerphotolink
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("cloud_atlas.Entities.Models.Atlas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Atlases");
                });

            modelBuilder.Entity("cloud_atlas.Entities.Models.AtlasUser", b =>
                {
                    b.Property<Guid>("AtlasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("bit");

                    b.HasKey("AtlasId", "UserId");

                    b.ToTable("AtlasUsers");
                });

            modelBuilder.Entity("cloud_atlas.Entities.Models.Marker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AtlasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("AtlasId");

                    b.ToTable("Markers");
                });

            modelBuilder.Entity("cloud_atlas.Entities.Models.AtlasUser", b =>
                {
                    b.HasOne("cloud_atlas.Entities.Models.Atlas", "Atlas")
                        .WithMany("AtlasUsers")
                        .HasForeignKey("AtlasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atlas");
                });

            modelBuilder.Entity("cloud_atlas.Entities.Models.Marker", b =>
                {
                    b.HasOne("cloud_atlas.Entities.Models.Atlas", "Atlas")
                        .WithMany("Markers")
                        .HasForeignKey("AtlasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atlas");
                });

            modelBuilder.Entity("cloud_atlas.Entities.Models.Atlas", b =>
                {
                    b.Navigation("AtlasUsers");

                    b.Navigation("Markers");
                });
#pragma warning restore 612, 618
        }
    }
}
